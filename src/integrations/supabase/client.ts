
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rtbicjimopzlqpodwjcm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ0Ymljamltb3B6bHFwb2R3amNtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxMzU3OTQsImV4cCI6MjA2MjcxMTc5NH0.YIkf-O5N0nq1f41ybefYu6Eey7qOOhusdCamjLbJHJM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true
  },
  global: {
    // Fixed TypeScript error by properly typing the fetch parameters
    fetch: (url: RequestInfo | URL, options?: RequestInit) => {
      console.log("Supabase fetch from client.ts:", url, options);
      
      // Add detailed logging for debugging
      if (typeof url === 'string' && url.includes('check_ins')) {
        console.log("DETECTED CHECK-IN REQUEST:", {
          method: options?.method || 'GET',
          headers: options?.headers ? 'Present' : 'None',
          body: options?.body ? JSON.parse(options.body.toString()) : 'None'
        });
      }
      
      // Add logging for request completion
      return fetch(url, options).then(response => {
        console.log(`Supabase fetch response for ${url}:`, {
          status: response.status,
          ok: response.ok,
          statusText: response.statusText
        });
        return response;
      }).catch(error => {
        console.error(`Supabase fetch error for ${url}:`, error);
        throw error;
      });
    },
  },
});
